#!/usr/bin/env node

/**
 * Script para construir y verificar la aplicaci√≥n
 * Detecta problemas comunes antes del deploy
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üèóÔ∏è  Iniciando build de producci√≥n...\n');

try {
  // 1. Limpiar builds anteriores
  console.log('üßπ Limpiando builds anteriores...');
  if (fs.existsSync('.next')) {
    fs.rmSync('.next', { recursive: true, force: true });
  }

  // 2. Ejecutar build
  console.log('\nüì¶ Ejecutando build...');
  execSync('npm run build', { stdio: 'inherit' });

  // 3. Verificar que el build se complet√≥
  if (!fs.existsSync('.next')) {
    throw new Error('El directorio .next no fue creado');
  }

  // 4. Verificar archivos de traducci√≥n en el build
  console.log('\nüåê Verificando archivos de traducci√≥n...');
  const messagesDir = path.join(__dirname, '..', 'messages');
  const locales = ['es', 'en', 'de'];
  
  locales.forEach(locale => {
    const filePath = path.join(messagesDir, `${locale}.json`);
    if (fs.existsSync(filePath)) {
      console.log(`‚úÖ ${locale}.json encontrado`);
    } else {
      console.error(`‚ùå ${locale}.json NO encontrado`);
    }
  });

  // 5. Verificar configuraci√≥n de i18n
  console.log('\n‚öôÔ∏è  Verificando configuraci√≥n i18n...');
  const i18nPath = path.join(__dirname, '..', 'src', 'i18n.ts');
  if (fs.existsSync(i18nPath)) {
    const i18nContent = fs.readFileSync(i18nPath, 'utf8');
    if (i18nContent.includes('preferred-locale')) {
      console.log('‚úÖ Configuraci√≥n de cookies encontrada en i18n.ts');
    } else {
      console.warn('‚ö†Ô∏è  i18n.ts podr√≠a no estar leyendo las cookies correctamente');
    }
  }

  console.log('\n‚úÖ Build completado exitosamente!');
  console.log('\nüìã Pr√≥ximos pasos:');
  console.log('1. Prueba localmente: npm run start');
  console.log('2. Deploy a preview: npm run deploy:preview');
  console.log('3. Deploy a producci√≥n: npm run deploy');

} catch (error) {
  console.error('\n‚ùå Error durante el build:', error.message);
  process.exit(1);
}
